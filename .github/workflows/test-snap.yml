name: Test Snap Package

on:
  push:
    paths:
      - 'internal/utils/macos.go'
      - '.github/workflows/test-snap.yml'
  pull_request:
    paths:
      - 'internal/utils/macos.go'
      - '.github/workflows/test-snap.yml'
  workflow_dispatch:

jobs:
  test-snap:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install ipsw via snap
      run: |
        sudo snap install ipsw
        
    - name: Test ipsw basic functionality
      run: |
        ipsw version
        
    - name: Test apfs-fuse detection (expected to fail initially)
      continue-on-error: true
      run: |
        echo "Testing apfs-fuse detection without apfs-fuse installed..."
        # This should fail gracefully and suggest installing apfs-fuse
        ipsw extract --dyld --remote https://updates.cdn-apple.com/2023FallFCS/fullrestores/042-41883/7AF02F3A-B388-4A39-A966-EF4C5BE76E02/iPhone15,2_17.0_21A329_Restore.ipsw --output /tmp/test-extract || true
        
    - name: Install dependencies for apfs-fuse
      run: |
        sudo apt-get update
        sudo apt-get install -y libfuse3-dev libfuse-dev build-essential cmake git libbz2-dev pkg-config

    - name: Create mock apfs-fuse for testing detection logic
      run: |
        echo "=== Creating mock apfs-fuse to test our enhanced detection logic ==="
        
        # Create mock apfs-fuse in multiple locations to test our search paths
        sudo mkdir -p /usr/local/bin /usr/bin /opt/apfs-fuse/bin
        
        # Create functional mock script
        cat > /tmp/mock-apfs-fuse << 'EOF'
#!/bin/bash
echo "Mock apfs-fuse v1.0 (for testing ipsw snap detection)"
echo "Called with arguments: $@"
echo "Would mount: $1 at $2"
# Exit successfully to simulate working apfs-fuse
exit 0
EOF
        
        # Install in primary location
        sudo cp /tmp/mock-apfs-fuse /usr/local/bin/apfs-fuse
        sudo chmod +x /usr/local/bin/apfs-fuse
        
        # Install in alternative locations for testing
        sudo cp /tmp/mock-apfs-fuse /usr/bin/apfs-fuse
        sudo chmod +x /usr/bin/apfs-fuse
        
        sudo cp /tmp/mock-apfs-fuse /opt/apfs-fuse/bin/apfs-fuse
        sudo chmod +x /opt/apfs-fuse/bin/apfs-fuse
        
        # Test the mock
        echo "=== Testing mock apfs-fuse ==="
        /usr/local/bin/apfs-fuse --version || echo "Mock script works"
        
        echo "=== Mock apfs-fuse installed successfully ==="
        
    - name: Verify apfs-fuse installation
      run: |
        which apfs-fuse || echo "apfs-fuse not in PATH"
        ls -la /usr/local/bin/apfs-fuse || echo "apfs-fuse not in /usr/local/bin"
        
    - name: Test enhanced apfs-fuse detection logic
      run: |
        echo "=== Testing our enhanced apfs-fuse detection fixes ==="
        
        # Test 1: Environment variable override
        echo "Test 1: IPSW_APFS_FUSE_PATH environment variable"
        export IPSW_APFS_FUSE_PATH=/usr/local/bin/apfs-fuse
        echo "Set IPSW_APFS_FUSE_PATH=$IPSW_APFS_FUSE_PATH"
        
        # Test 2: Remove from PATH to test our enhanced search
        echo "Test 2: Testing enhanced path search (removing from PATH)"
        export PATH="/bin:/usr/bin"  # Remove /usr/local/bin from PATH
        echo "Modified PATH to: $PATH"
        which apfs-fuse && echo "ERROR: apfs-fuse still in PATH!" || echo "Good: apfs-fuse not in PATH"
        
        # Test 3: Test that our code can still find it in common locations
        echo "Test 3: Our enhanced detection should find apfs-fuse despite PATH limitation"
        echo "This simulates the snap environment where PATH is restricted"
        
        # Create a simple test that exercises our detection logic without full extraction
        echo "=== Testing detection logic with a simple command ==="
        
        # Note: We can't easily test the full extraction in CI, but we can test
        # that our enhanced error messages are working by checking ipsw help output
        ipsw extract --help | grep -i apfs || echo "Help text checked"
        
        echo "=== Enhanced detection tests completed ==="
        
    - name: Test snap confinement behavior
      run: |
        echo "=== Snap info ==="
        snap list ipsw
        echo "=== Snap connections ==="
        snap connections ipsw
        echo "=== PATH from snap environment ==="
        snap run ipsw --help | head -5 || true
        echo "=== Testing PATH visibility ==="
        echo $PATH
        echo "=== Available interfaces for ipsw snap ==="
        snap interface | grep -E "(system-files|removable-media|home)" || echo "No relevant interfaces found"
        
    - name: Test alternative apfs-fuse locations for snap users
      continue-on-error: true
      run: |
        echo "=== Testing various apfs-fuse installation methods for snap users ==="
        
        # Method 1: System-wide installation (what we just did)
        echo "Method 1: System installation (/usr/local/bin)"
        ls -la /usr/local/bin/apfs-fuse || echo "Not found in /usr/local/bin"
        
        # Method 2: Try to install in user space
        echo "Method 2: User space installation"
        mkdir -p $HOME/.local/bin
        if [ -f /usr/local/bin/apfs-fuse ]; then
          cp /usr/local/bin/apfs-fuse $HOME/.local/bin/
          echo "Copied to $HOME/.local/bin/apfs-fuse"
        fi
        
        # Method 3: Test with IPSW_APFS_FUSE_PATH from different locations
        echo "Method 3: Testing environment variable with different paths"
        for path in "/usr/local/bin/apfs-fuse" "$HOME/.local/bin/apfs-fuse" "/usr/bin/apfs-fuse"; do
          if [ -f "$path" ]; then
            echo "Found apfs-fuse at: $path"
            export IPSW_APFS_FUSE_PATH="$path"
            echo "Testing with IPSW_APFS_FUSE_PATH=$path"
            # Quick test to see if our enhanced detection works
            timeout 30s ipsw extract --dyld --remote https://updates.cdn-apple.com/2023FallFCS/fullrestores/042-41883/7AF02F3A-B388-4A39-A966-EF4C5BE76E02/iPhone15,2_17.0_21A329_Restore.ipsw --output /tmp/test-extract-method3 || echo "Test with $path failed or timed out"
            break
          fi
        done
        
    - name: Document findings
      run: |
        echo "=== Test Results Summary ==="
        echo "This workflow tests ipsw snap package functionality and apfs-fuse detection."
        echo "Key findings will be logged above for debugging snap confinement issues."
        echo "Check the step results to see if our enhanced apfs-fuse detection works."